---
name: CI

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]
  push:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  action:
    environment:
      ${{ github.event_name == 'pull_request' &&
      github.event.pull_request.head.repo.full_name != github.repository &&
      'external' || 'internal' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Release
        id: setup-release
        uses: LizardByte/setup-release-action@master  # keep this on master, to prevent endless depandabot PRs
        with:
          fail_on_events_api_error:  # PRs will fail if this is true
            ${{ github.event_name == 'pull_request' && 'false' || 'true' }}
          github_token: ${{ secrets.GITHUB_TOKEN }}  # can use GITHUB_TOKEN for read-only access

      - name: Set action variables
        id: vars
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            discussion_category=tests
            release_tag=pr-${{ github.event.pull_request.number }}-${{ github.run_id }}
          else
            discussion_category=announcements
            release_tag=${{ steps.setup-release.outputs.release_tag }}
          fi

          # set outputs
          echo "discussion_category=$discussion_category" >> $GITHUB_OUTPUT
          echo "release_tag=$release_tag" >> $GITHUB_OUTPUT

      - name: Run Action
        id: action
        uses: ./
        with:
          allowUpdates: false
          artifacts: ''
          body: ''
          discussionCategory: ${{ steps.vars.outputs.discussion_category }}
          generateReleaseNotes: true
          name: ${{ steps.vars.outputs.release_tag }}
          prerelease: true
          tag: ${{ steps.vars.outputs.release_tag }}
          token: ${{ secrets.GH_BOT_TOKEN }}

      - name: Sleep
        if: ${{ always() && github.event_name == 'pull_request' }}
        run: sleep 60

      - name: Delete Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
        if: ${{ always() && github.event_name == 'pull_request' }}
        run: |
          gh release delete ${{ steps.vars.outputs.release_tag }} --cleanup-tag --yes

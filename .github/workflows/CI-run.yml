---
name: CI-run

on:
  workflow_run:
    workflows:
      - CI-init
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      # tell the PR that the action is running
#      - name: Set status to running
#        if: ${{ github.event.workflow_run.conclusion == 'success' }}
#        uses: actions/github-script@v6
#        with:
#          script: |
#            github.repos.createCommitStatus({
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              sha: context.sha,
#              state: 'pending',
#              context: 'CI-run',
#              description: 'Running CI-run',
#              target_url: '${{ github.event.workflow_run.event.html_url }}',
#            })

      # checkout the PR merge commit
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_commit.id || github.sha }}

      - name: Setup Release
        id: setup-release
        uses: LizardByte/setup-release-action@master  # keep this on master, to prevent endless depandabot PRs
        with:
          changelog_path: ./tests/data/set${{ matrix.set }}/CHANGELOG.md
          fail_on_events_api_error: false
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set action variables
        id: vars
        run: |
          # check if original workflow was a "pull_request"
          
          if [ "${{ github.event.workflow_run.event_name }}" == "pull_request" ]; then
            discussion_category=tests
            publish_pre_release=true
            release_tag=pr-${{ github.event.workflow_run.event.number }}-${{ github.run_number }}
            token=${{ secrets.GITHUB_TOKEN }}
          else
            discussion_category=announcements
            publish_pre_release=${{ steps.setup-release.outputs.publish_pre_release }}
            release_tag=${{ steps.setup-release.outputs.release_tag }}
            token=${{ secrets.GH_BOT_TOKEN }}
          fi

          # set outputs
          echo "discussion_category=$discussion_category" >> $GITHUB_OUTPUT
          echo "publish_stable_release=$publish_stable_release" >> $GITHUB_OUTPUT
          echo "release_tag=$release_tag" >> $GITHUB_OUTPUT
          echo "token=$token" >> $GITHUB_OUTPUT

      - name: Run Action
        id: action
        uses: ./
        with:
          allowUpdates: false
          artifacts: ''
          body: ''
          discussionCategory: ${{ steps.vars.outputs.discussion_category }}
          generateReleaseNotes: true
          name: ${{ steps.vars.outputs.release_tag }}
          prerelease: ${{ steps.vars.outputs.publish_pre_release == 'true' }}
          tag: ${{ steps.vars.outputs.release_tag }}
          token: ${{ steps.vars.outputs.token }}

      - name: Sleep
        if: ${{ always() && github.event.workflow_run.event_name == 'pull_request' }}
        run: sleep 120

      - name: Delete Release
        env:
          GITHUB_TOKEN: ${{ steps.vars.outputs.token }}
        if: ${{ always() && github.event.workflow_run.event_name == 'pull_request' }}
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          tag_name: ${{ steps.vars.outputs.release_tag }}

      # tell the PR that the action is complete
#      - name: Update status
#        if: always()
#        uses: actions/github-script@v6
#        with:
#          script: |
#            github.repos.createCommitStatus({
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              sha: context.sha,
#              state: '${{ job.status }}',
#              context: 'CI-run',
#              description: 'CI-run ${{ job.status }}',
#              target_url: '${{ github.event.workflow_run.event.html_url }}',
#            })
